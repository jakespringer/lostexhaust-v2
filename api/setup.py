# Autogenerates necessary files for development and deployment.

import json, os

config = None
with open(os.path.join(os.path.dirname(__file__), "..", "conf", "config.json"), "r") as config_file:
  config = json.loads(config_file.read())
  if config is None:
    print("There was an error reading the config file. LostExhaust could not be started.")

with open(os.path.join(os.path.dirname(__file__), "lostexhaust", "autogen.py"), "w") as autogen_file:
  autogen_file.write("# # # # # # # # # # # # # # # # # # # # # # # # # # # #\n")
  autogen_file.write("# DO NOT EDIT THIS FILE! IT WAS GENERATED BY A ROBOT. #\n")
  autogen_file.write("# # # # # # # # # # # # # # # # # # # # # # # # # # # #\n")
  autogen_file.write("def root_dir():\n")
  autogen_file.write("  return \"" + os.path.abspath(os.path.join(__file__, "..", ".."))+"\"\n")
  autogen_file.write("def sql_hostname():\n")
  autogen_file.write("  return \"" + config["sqlHostname"] + "\"\n")
  autogen_file.write("def sql_port():\n")
  autogen_file.write("  return " + config["sqlPort"] + "\n")
  autogen_file.write("def sql_username():\n")
  autogen_file.write("  return \"" + config["sqlUsername"] + "\"\n")
  autogen_file.write("def sql_password():\n")
  autogen_file.write("  return \"" + config["sqlPassword"] + "\"\n")
  autogen_file.write("def sql_lookup_table():\n")
  autogen_file.write("  return \"" + config["sqlLookupTable"] + "\"\n")
  autogen_file.write("def sql_household_table():\n")
  autogen_file.write("  return \"" + config["sqlHouseholdTable"] + "\"\n")
  autogen_file.write("def sql_user_table():\n")
  autogen_file.write("  return \"" + config["sqlUserTable"] + "\"\n")
  autogen_file.write("def google_api_key():\n")
  autogen_file.write("  return \"" + config["googleApiKey"] + "\"\n")
  autogen_file.write("def catlin_rsa_pem_file():\n")
  autogen_file.write("  return \"" + config["catlinRsaPemFile"] + "\"\n")
  autogen_file.write("def api_keys():\n")
  autogen_file.write("  return " + str(config["validApiKeys"]) + "\n")
